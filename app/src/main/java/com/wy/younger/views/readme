自定义view是比较难的一个知识点，这里面涉及都的滑动事件处理，绘制，布局等

MotionEvent:

getAction事件，一共有五个：
ACTION_DOWN： （按下）
ACTION_MOVE： （移动，点击事件不会触发）
ACTION_UP： （抬起）
ACTION_CANCEL： （事件被拦截，事件开始给了子view，然后父view又拦截了该事件，那么事件流中的事件动作对于子view就是cancel）
ACTION_OUTSIDE： （不在该区域中）

坐标相关：
getX，getY （相对parent坐标）
getRawX，getRawY （相对屏幕的绝对坐标）



多点触控
getActionMasked事件
注意：
1、多点触控时必须使用 getActionMasked() 来获取事件类型。
2、单点触控时由于事件数值不变，使用 getAction() 和 getActionMasked() 两个方法都可以。
原理：getAction获取到的是一个32位的int型数值，后8位表示事件类型   getActionMasked获取到的后八位表示事件，倒数8位表示手指的顺序
手指按下	触发事件(数值)
第1个手指按下	ACTION_DOWN (0x00000000)
第2个手指按下	ACTION_POINTER_DOWN (0x00000105)
第3个手指按下	ACTION_POINTER_DOWN (0x00000205)
第4个手指按下	ACTION_POINTER_DOWN (0x00000305)


ACTION_DOWN：第一个 手指 初次接触到屏幕 时触发
ACTION_MOVE：手指 在屏幕上滑动 时触发，会多次触发
ACTION_UP：最后一个 手指 离开屏幕 时触发
ACTION_POINTER_DOWN：有非主要的手指按下(即按下之前已经有手指在屏幕上）
ACTION_POINTER_UP：有非主要的手指抬起(即抬起之后仍然有手指在屏幕上）

相关方法：
getActionIndex()：获取该事件是哪个指针(手指)产生的。
getPointerCount()：获取在屏幕上手指的个数。
getActionIndex():第几个手指
getPointerId(int pointerIndex)：获取一个指针(手指)的唯一标识符ID，在手指按下和抬起之间ID始终不变。
findPointerIndex(int pointerId)：通过PointerId获取到当前状态下PointIndex，之后通过PointIndex获取其他内容。
getX(int pointerIndex)：获取某一个指针(手指)的X坐标
getY(int pointerIndex)：获取某一个指针(手指)的Y坐标



