Looper：消息队列的发动机

每个Looper必须和一个线程进行绑定

looper.prepare

looper.loop

这两个方法在主线程(activity)中，已经默认调用了


looper中有messagequeue对象，也就是消息队列

looper死循环为什么不会卡死？
主线程的死循环一直运行是不是特别消耗CPU资源呢？ 其实不然，
这里就涉及到Linux pipe/epoll机制，简单说就是在主线程的MessageQueue没有消息时，
便阻塞在loop的queue.next()中的nativePollOnce()方法里，
此时主线程会释放CPU资源进入休眠状态，直到下个消息到达或者有事务发生，
通过往pipe管道写端写入数据来唤醒主线程工作。这里采用的epoll机制，
是一种IO多路复用机制，可以同时监控多个描述符，当某个描述符就绪(读或写就绪)，
则立刻通知相应程序进行读或写操作，本质同步I/O，即读写是阻塞的。
 所以说，主线程大多数时候都是处于休眠状态，并不会消耗大量CPU资源。


