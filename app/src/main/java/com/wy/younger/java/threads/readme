java多线程编程
Thread
Runnable
Callable+Future

关键字

锁

通信

线程池


Executor框架包括：线程池，Executor，Executors，ExecutorService，CompletionService，Future，Callable等

1.推荐使用实现runnable而不是集成thread的方式，因为runnable可以共用，多个thread对象可以共用一个runnable




chapter1：java实现多线程的三种方式

chapter2：线程中断 interrupt
使用interrupt（）中断线程当一个线程运行时，另一个线程可以调用对应的
Thread对象的interrupt（）方法来中断它，该方法只是在目标线程中设置一个标志，
表示它已经被中断，并立即返回

join方法用线程对象调用，如果在一个线程A中调用另一个线程B的join方法，
线程A将会等待线程B执行完毕后再执行。
yield可以直接用Thread类调用，yield让出CPU执行权给同等级的线程，
如果没有相同级别的线程在等待CPU的执行权，则该线程继续执行。


chapter3:挂起 suspend    继续resume   这是两个丢弃的方法，不建议使用  一般自己通过设置boolean类型的标志位判断

chapter4：用户线程和守护线程    线程阻塞

chapter5：volatile用法   volatile保证了不同线程间操作同一个对象，始终能获取到最新的数据，这是因为不同的线程为了保证可以快速
      执行，一般变量都保存在cache中，volatile使得变量保存在主内存中，但是相对来讲  效率可能会有一定影响